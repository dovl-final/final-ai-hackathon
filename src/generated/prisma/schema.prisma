generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String                @id @default(cuid())
  name                 String?
  email                String                @unique
  emailVerified        DateTime?
  image                String?
  isAdmin              Boolean               @default(false)
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  accounts             Account[]
  projects             Project[]             @relation("ProjectCreator")
  sessions             Session[]
  projectRegistrations ProjectRegistration[]
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  ext_expires_in    Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Project {
  id                 String                @id @default(cuid())
  title              String
  description        String
  minTeamSize        Int
  maxTeamSize        Int
  environment        String                @default("internal")
  additionalRequests String?
  createdAt          DateTime              @default(now())
  updatedAt          DateTime              @updatedAt
  creatorId          String
  creator            User                  @relation("ProjectCreator", fields: [creatorId], references: [id])
  registrations      ProjectRegistration[]

  @@index([creatorId])
}

model ProjectRegistration {
  id String @id @default(cuid())

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, projectId], name: "UserProjectPreferenceUnique")
  @@index([userId])
  @@index([projectId])
}
